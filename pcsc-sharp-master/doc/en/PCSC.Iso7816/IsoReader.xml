<Type Name="IsoReader" FullName="PCSC.Iso7816.IsoReader">
  <TypeSignature Language="C#" Value="public class IsoReader : IDisposable, PCSC.Iso7816.IIsoReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IsoReader extends System.Object implements class PCSC.Iso7816.IIsoReader, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>pcsc-sharp</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>PCSC.Iso7816.IIsoReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A ISO/IEC 7816 compliant reader.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsoReader (PCSC.ISCardContext context, bool releaseContextOnDispose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class PCSC.ISCardContext context, bool releaseContextOnDispose) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="PCSC.ISCardContext" />
        <Parameter Name="releaseContextOnDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">A context to the PC/SC Resource Manager.</param>
        <param name="releaseContextOnDispose">if set to <c>true</c> the <paramref name="context" /> will be released on <see cref="M:PCSC.Iso7816.IsoReader.Dispose" />.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.IsoReader" /> class that will create its own instance of a <see cref="T:PCSC.SCardReader" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If <paramref name="context" /> is <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsoReader (PCSC.ISCardReader reader, bool disconnectReaderOnDispose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class PCSC.ISCardReader reader, bool disconnectReaderOnDispose) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="PCSC.ISCardReader" />
        <Parameter Name="disconnectReaderOnDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">The supplied reader will be used for communication with the smart card.</param>
        <param name="disconnectReaderOnDispose">if set to <c>true</c> the supplied <paramref name="reader" /> will be disconnected on <see cref="M:PCSC.Iso7816.IsoReader.Dispose" />.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.IsoReader" /> class.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">If reader is <see langword="null" /></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsoReader (PCSC.ISCardContext context, string readerName, PCSC.SCardShareMode mode, PCSC.SCardProtocol protocol, bool releaseContextOnDispose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class PCSC.ISCardContext context, string readerName, valuetype PCSC.SCardShareMode mode, valuetype PCSC.SCardProtocol protocol, bool releaseContextOnDispose) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="PCSC.ISCardContext" />
        <Parameter Name="readerName" Type="System.String" />
        <Parameter Name="mode" Type="PCSC.SCardShareMode" />
        <Parameter Name="protocol" Type="PCSC.SCardProtocol" />
        <Parameter Name="releaseContextOnDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">A context to the PC/SC Resource Manager.</param>
        <param name="readerName">Name of the reader to connect with.</param>
        <param name="mode">The share mode.</param>
        <param name="protocol">The communication protocol. <seealso cref="M:PCSC.ISCardReader.Connect(System.String,PCSC.SCardShareMode,PCSC.SCardProtocol)" /></param>
        <param name="releaseContextOnDispose">if set to <c>true</c> the <paramref name="context" /> will be released on <see cref="M:PCSC.Iso7816.IsoReader.Dispose" />.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.IsoReader" /> class that will create its own instance of a <see cref="T:PCSC.SCardReader" /> and immediately connect.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsoReader (PCSC.ISCardReader reader, string readerName, PCSC.SCardShareMode mode, PCSC.SCardProtocol protocol, bool disconnectReaderOnDispose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class PCSC.ISCardReader reader, string readerName, valuetype PCSC.SCardShareMode mode, valuetype PCSC.SCardProtocol protocol, bool disconnectReaderOnDispose) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="PCSC.ISCardReader" />
        <Parameter Name="readerName" Type="System.String" />
        <Parameter Name="mode" Type="PCSC.SCardShareMode" />
        <Parameter Name="protocol" Type="PCSC.SCardProtocol" />
        <Parameter Name="disconnectReaderOnDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">The supplied reader will be used for communication with the smart card.</param>
        <param name="readerName">Name of the reader to connect with.</param>
        <param name="mode">The share mode.</param>
        <param name="protocol">The communication protocol. <seealso cref="M:PCSC.ISCardReader.Connect(System.String,PCSC.SCardShareMode,PCSC.SCardProtocol)" /></param>
        <param name="disconnectReaderOnDispose">if set to <c>true</c> the supplied <paramref name="reader" /> will be disconnected on <see cref="M:PCSC.Iso7816.IsoReader.Dispose" />.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.IsoReader" /> class and immediately connects to the reader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveProtocol">
      <MemberSignature Language="C#" Value="public virtual PCSC.SCardProtocol ActiveProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype PCSC.SCardProtocol ActiveProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.SCardProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the active protocol.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect (string readerName, PCSC.SCardShareMode mode, PCSC.SCardProtocol protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect(string readerName, valuetype PCSC.SCardShareMode mode, valuetype PCSC.SCardProtocol protocol) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="readerName" Type="System.String" />
        <Parameter Name="mode" Type="PCSC.SCardShareMode" />
        <Parameter Name="protocol" Type="PCSC.SCardProtocol" />
      </Parameters>
      <Docs>
        <param name="readerName">Name of the reader.</param>
        <param name="mode">The share mode.</param>
        <param name="protocol">The communication protocol. <seealso cref="M:PCSC.ISCardReader.Connect(System.String,PCSC.SCardShareMode,PCSC.SCardProtocol)" /></param>
        <summary>Connects the specified reader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructCommandApdu">
      <MemberSignature Language="C#" Value="public virtual PCSC.Iso7816.CommandApdu ConstructCommandApdu (PCSC.Iso7816.IsoCase isoCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class PCSC.Iso7816.CommandApdu ConstructCommandApdu(valuetype PCSC.Iso7816.IsoCase isoCase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.CommandApdu</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isoCase" Type="PCSC.Iso7816.IsoCase" />
      </Parameters>
      <Docs>
        <param name="isoCase">The ISO case that shall be used for this command.</param>
        <summary>Constructs a command APDU using the active protocol of the reader.</summary>
        <returns>An empty command APDU.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentContext">
      <MemberSignature Language="C#" Value="public PCSC.ISCardContext CurrentContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class PCSC.ISCardContext CurrentContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.ISCardContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current context.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentShareMode">
      <MemberSignature Language="C#" Value="public virtual PCSC.SCardShareMode CurrentShareMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype PCSC.SCardShareMode CurrentShareMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.SCardShareMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current share mode.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public virtual void Disconnect (PCSC.SCardReaderDisposition disposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect(valuetype PCSC.SCardReaderDisposition disposition) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposition" Type="PCSC.SCardReaderDisposition" />
      </Parameters>
      <Docs>
        <param name="disposition">The action that shall be executed after disconnect.</param>
        <summary>Disconnects the currently connected reader.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases unmanaged and managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~IsoReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizes an instance of the <see cref="T:PCSC.Iso7816.IsoReader" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceiveSize">
      <MemberSignature Language="C#" Value="public virtual int MaxReceiveSize { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxReceiveSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum number of bytes that can be received.</summary>
        <value>Default is 128 bytes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public PCSC.ISCardReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class PCSC.ISCardReader Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.ISCardReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current reader.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderName">
      <MemberSignature Language="C#" Value="public string ReaderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReaderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the reader.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetransmitWaitTime">
      <MemberSignature Language="C#" Value="public virtual int RetransmitWaitTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RetransmitWaitTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the wait time in milliseconds that is used if an APDU needs to be retransmitted.</summary>
        <value>Default is 0 ms</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowExceptionOnSCardError">
      <MemberSignature Language="C#" Value="protected virtual void ThrowExceptionOnSCardError (PCSC.SCardError sc);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ThrowExceptionOnSCardError(valuetype PCSC.SCardError sc) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="PCSC.SCardError" />
      </Parameters>
      <Docs>
        <param name="sc">The error code returned from the native PC/SC library.</param>
        <summary>Throws an exception if <paramref name="sc" /> is not <see cref="F:PCSC.SCardError.Success" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transmit">
      <MemberSignature Language="C#" Value="public virtual PCSC.Iso7816.Response Transmit (PCSC.Iso7816.CommandApdu commandApdu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class PCSC.Iso7816.Response Transmit(class PCSC.Iso7816.CommandApdu commandApdu) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandApdu" Type="PCSC.Iso7816.CommandApdu" />
      </Parameters>
      <Docs>
        <param name="commandApdu">The command APDU.</param>
        <summary>Transmits the specified command APDU.</summary>
        <returns>A response containing one ore more <see cref="T:PCSC.Iso7816.ResponseApdu" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
