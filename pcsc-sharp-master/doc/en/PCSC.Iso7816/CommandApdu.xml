<Type Name="CommandApdu" FullName="PCSC.Iso7816.CommandApdu">
  <TypeSignature Language="C#" Value="public class CommandApdu : PCSC.Iso7816.Apdu, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandApdu extends PCSC.Iso7816.Apdu implements class System.ICloneable" />
  <AssemblyInfo>
    <AssemblyName>pcsc-sharp</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>PCSC.Iso7816.Apdu</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>A Command Application Protocol Data Unit (APDU), defined by the ISO/IEC 7816 standards</summary>
    <remarks>
      <para>A <see cref="T:PCSC.Iso7816.CommandApdu" /> can be build using one of the following <see cref="T:PCSC.Iso7816.IsoCase" />:</para>
      <list type="table">
        <listheader>
          <term>Case</term>
          <description>APDU structure</description>
        </listheader>
        <item>
          <term>1</term>
          <description>CLA INS P1 P2</description>
        </item>
        <item>
          <term>2</term>
          <description>CLA INS P1 P2 Le</description>
        </item>
        <item>
          <term>3</term>
          <description>CLA INS P1 P2 Lc Data</description>
        </item>
        <item>
          <term>4</term>
          <description>CLA INS P1 P2 Lc Data Le</description>
        </item>
      </list>
      <para>See the documentation for <see cref="T:PCSC.Iso7816.IsoCase" /> for more information.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandApdu (PCSC.Iso7816.IsoCase isoCase, PCSC.SCardProtocol protocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype PCSC.Iso7816.IsoCase isoCase, valuetype PCSC.SCardProtocol protocol) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isoCase" Type="PCSC.Iso7816.IsoCase" />
        <Parameter Name="protocol" Type="PCSC.SCardProtocol" />
      </Parameters>
      <Docs>
        <param name="isoCase">The ISO case to use.</param>
        <param name="protocol">The protocol.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.CommandApdu" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CLA">
      <MemberSignature Language="C#" Value="public byte CLA { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 CLA" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the CLA byte.</summary>
        <value>To be added.</value>
        <remarks>You can use the <see cref="T:PCSC.Iso7816.ClassByte" /> class to build a well formed CLA byte.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a clone of the current instance. The data is NOT copied. </summary>
        <returns>A clone of the current instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Command APDU data to be transmitted.</summary>
        <value>To be added.</value>
        <remarks>You can only set data if you created the <see cref="T:PCSC.Iso7816.CommandApdu" /> with ISO case 3 or 4.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpectedResponseLength">
      <MemberSignature Language="C#" Value="public int ExpectedResponseLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpectedResponseLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The expected response size (Le + SW1SW2)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassByteInfo">
      <MemberSignature Language="C#" Value="public PCSC.Iso7816.ClassByte GetClassByteInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class PCSC.Iso7816.ClassByte GetClassByteInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.ClassByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the CLA.</summary>
        <returns>The <see cref="P:PCSC.Iso7816.CommandApdu.CLA" /> as <see cref="T:PCSC.Iso7816.ClassByte" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstructionByteInfo">
      <MemberSignature Language="C#" Value="public PCSC.Iso7816.InstructionByte GetInstructionByteInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class PCSC.Iso7816.InstructionByte GetInstructionByteInfo() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.InstructionByte</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the instruction byte info.</summary>
        <returns>The <see cref="P:PCSC.Iso7816.CommandApdu.INS" /> as <see cref="T:PCSC.Iso7816.InstructionByte" /> instance.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates the APDU size in bytes.</summary>
        <returns>The APDU size in bytes depending on the currently selected ISO case.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="INS">
      <MemberSignature Language="C#" Value="public byte INS { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 INS" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the instruction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instruction">
      <MemberSignature Language="C#" Value="public PCSC.Iso7816.InstructionCode Instruction { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype PCSC.Iso7816.InstructionCode Instruction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.InstructionCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the instruction.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Indicates if the command APDU is valid.</summary>
        <value>
          <see langword="true" /> if the APDU is valid.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lc">
      <MemberSignature Language="C#" Value="public int Lc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Lc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Length command</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Le">
      <MemberSignature Language="C#" Value="public int Le { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Le" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Length expected.</summary>
        <value>To be added.</value>
        <remarks>This is the expected number of response data bytes. Do not take account of the status word (SW1 and SW2) here!</remarks>
      </Docs>
    </Member>
    <Member MemberName="P1">
      <MemberSignature Language="C#" Value="public byte P1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 P1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The first parameter (P1)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="P1P2">
      <MemberSignature Language="C#" Value="public int P1P2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 P1P2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A combination of parameter P1 and P2</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="P2">
      <MemberSignature Language="C#" Value="public byte P2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 P2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The second parameter (P2)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="P3">
      <MemberSignature Language="C#" Value="public int P3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 P3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The third parameter (P3 or Le)</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public override byte[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] ToArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Converts the command APDU to a transmittable byte array.</summary>
        <returns>The command APDU as byte array.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">If the command APDU is in an invalid state.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
