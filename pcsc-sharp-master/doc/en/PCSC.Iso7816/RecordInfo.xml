<Type Name="RecordInfo" FullName="PCSC.Iso7816.RecordInfo">
  <TypeSignature Language="C#" Value="public class RecordInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RecordInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>pcsc-sharp</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Record structure information.</summary>
    <remarks>Elementary files (EF) that have a sequence of individually identifiable records should use one of the following methods for structuring:
            <list type="bullet"><item><description>Linear elementary file (EF) with records of variable size.</description></item><item><description>Linear elementary file (EF) with records of fixed size.</description></item><item><description>Cyclic elementary file (EF) with records of fixed size.</description></item></list></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecordInfo (byte fileDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8 fileDescriptor) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileDescriptor" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="fileDescriptor">The file descriptor.</param>
        <summary>Initializes a new instance of the <see cref="T:PCSC.Iso7816.RecordInfo" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FILE_STRUCTURE_IS_CYCLIC">
      <MemberSignature Language="C#" Value="public const byte FILE_STRUCTURE_IS_CYCLIC = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 FILE_STRUCTURE_IS_CYCLIC = (6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Cyclic bit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FILE_STRUCTURE_IS_LINEAR_FIXED">
      <MemberSignature Language="C#" Value="public const byte FILE_STRUCTURE_IS_LINEAR_FIXED = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 FILE_STRUCTURE_IS_LINEAR_FIXED = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Linear fixed bit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FILE_STRUCTURE_IS_LINEAR_VARIABLE">
      <MemberSignature Language="C#" Value="public const byte FILE_STRUCTURE_IS_LINEAR_VARIABLE = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 FILE_STRUCTURE_IS_LINEAR_VARIABLE = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Linear variable bit.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FILE_STRUCTURING_MASK">
      <MemberSignature Language="C#" Value="public const byte FILE_STRUCTURING_MASK = 134;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int8 FILE_STRUCTURING_MASK = (134)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <MemberValue>134</MemberValue>
      <Docs>
        <summary>File structuring mask bits.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileDescriptor">
      <MemberSignature Language="C#" Value="public byte FileDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 FileDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the file descriptor.</summary>
        <value>The file descriptor as byte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCyclic">
      <MemberSignature Language="C#" Value="public bool IsCyclic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCyclic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the EF has cyclic records.</summary>
        <value>
          <c>true</c> if the EF is cyclic; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixed">
      <MemberSignature Language="C#" Value="public bool IsFixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the EF's record size is fixed.</summary>
        <value>
          <c>true</c> if the record's size is fixed; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLinear">
      <MemberSignature Language="C#" Value="public bool IsLinear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLinear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the EF has linear records.</summary>
        <value>
          <c>true</c> if the EF is linear; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSimpleTlv">
      <MemberSignature Language="C#" Value="public bool IsSimpleTlv { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSimpleTlv" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the EF contains simple TLV records.</summary>
        <value>
          <c>true</c> if the EF contains simple TLV records; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVariable">
      <MemberSignature Language="C#" Value="public bool IsVariable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the EF's record size is variable.</summary>
        <value>
          <c>true</c> if the record's size is variable; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
