<Type Name="ResponseApduEnumerator" FullName="PCSC.Iso7816.ResponseApduEnumerator">
  <TypeSignature Language="C#" Value="public class ResponseApduEnumerator : System.Collections.Generic.IEnumerable&lt;PCSC.Iso7816.ResponseApdu&gt;, System.Collections.Generic.IEnumerator&lt;PCSC.Iso7816.ResponseApdu&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResponseApduEnumerator extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class PCSC.Iso7816.ResponseApdu&gt;, class System.Collections.Generic.IEnumerator`1&lt;class PCSC.Iso7816.ResponseApdu&gt;, class System.Collections.IEnumerable, class System.Collections.IEnumerator, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>pcsc-sharp</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;PCSC.Iso7816.ResponseApdu&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;PCSC.Iso7816.ResponseApdu&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A <see cref="T:PCSC.Iso7816.ResponseApdu" /> enumerator.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResponseApduEnumerator (PCSC.Iso7816.ResponseApdu[] apdus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class PCSC.Iso7816.ResponseApdu[] apdus) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="apdus" Type="PCSC.Iso7816.ResponseApdu[]" />
      </Parameters>
      <Docs>
        <param name="apdus">An array of <see cref="T:PCSC.Iso7816.ResponseApdu" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:PCSC.Iso7816.ResponseApduEnumerator" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResponseApduEnumerator (System.Collections.Generic.IEnumerable&lt;PCSC.Iso7816.ResponseApdu&gt; apdus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class PCSC.Iso7816.ResponseApdu&gt; apdus) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="apdus" Type="System.Collections.Generic.IEnumerable&lt;PCSC.Iso7816.ResponseApdu&gt;" />
      </Parameters>
      <Docs>
        <param name="apdus">An enumeration of <see cref="T:PCSC.Iso7816.ResponseApdu" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:PCSC.Iso7816.ResponseApduEnumerator" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResponseApduEnumerator (System.Collections.Generic.List&lt;PCSC.Iso7816.ResponseApdu&gt; lst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.List`1&lt;class PCSC.Iso7816.ResponseApdu&gt; lst) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="lst" Type="System.Collections.Generic.List&lt;PCSC.Iso7816.ResponseApdu&gt;" />
      </Parameters>
      <Docs>
        <param name="lst">A list of <see cref="T:PCSC.Iso7816.ResponseApdu" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:PCSC.Iso7816.ResponseApduEnumerator" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public PCSC.Iso7816.ResponseApdu Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class PCSC.Iso7816.ResponseApdu Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>PCSC.Iso7816.ResponseApdu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the current element.
            </summary>
        <value>The current element.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> if the enumerator reaches the end and therefore <see cref="P:PCSC.Iso7816.ResponseApduEnumerator.Current" /> is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes the enumerator and releases all managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;PCSC.Iso7816.ResponseApdu&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class PCSC.Iso7816.ResponseApdu&gt; GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;PCSC.Iso7816.ResponseApdu&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an enumerator.
            </summary>
        <returns>
            A <see cref="T:System.Collections.IEnumerator" /> objekt, that can be used to enumerate through all <see cref="T:PCSC.Iso7816.ResponseApdu" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Sets the enumerator the the next element.
            </summary>
        <returns>
          <c>true</c> if there exists another element. Otherwise <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the enumerator to the beginning.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns an enumerator.
            </summary>
        <returns>
            A <see cref="T:System.Collections.IEnumerator" /> objekt, that can be used to enumerate through all <see cref="T:PCSC.Iso7816.ResponseApdu" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the current element.
            </summary>
        <value>The current element.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> if the enumerator reaches the end and therefore <see cref="P:PCSC.Iso7816.ResponseApduEnumerator.Current" /> is invalid.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
